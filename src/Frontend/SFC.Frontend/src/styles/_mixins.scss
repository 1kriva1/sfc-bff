@use "ngx-sfc-common/styles/index" as *;
@use "ngx-sfc-common/components/delimeter/delimeter.component.mixins.scss" as delimeter;
@import "./variables";
@import "./table/mixins";

@mixin button() {
  sfc-button {
    transition: transform 500ms;
    transform-origin: 50% 0;

    &:hover {
      transform: scale(1.05);
    }

    ::ng-deep {
      .button {
        background: $color-yellow-0;
        border-color: $color-yellow-0;

        &:hover {
          background: $color-yellow-1;
          border-color: $color-yellow-1;
        }
      }
    }
  }
}

@mixin theme-background() {
  @include theme-value(background, $background-default, $background-dark);

  transition: background $transition-theme-backround-duration $transition-theme-backround-timing-function;
}

@mixin theme-color($value-common, $value-dark, $selector: "&") {
  @include theme-value(color, $value-common, $value-dark, $selector);
}

@mixin error-message() {
  text-align: center;
  font-weight: bold;
  color: $color-failed;
  width: 100%;
  padding: 0;
  font-size: 0.8em;
}

@mixin base-page() {
  :host {
    .container {
      display: flex;

      .side {
        .menu-container {
          display: flex;
          justify-content: space-between;
          align-items: center;
          flex-direction: column;
          position: sticky;
          top: 1em;
          bottom: 0;

          sfc-side-menu {
            ::ng-deep .container {
              transition:
                background $transition-theme-backround-duration $transition-theme-backround-timing-function,
                width $transition-duration-default ease-in-out;
            }
          }

          sfc-theme-toggler {
            @include center-wrap;

            padding: 3em 0;
          }
        }
      }

      .content {
        width: 100%;
        padding: 0 2em 2em;
        overflow: hidden;

        .form {
          form {
            display: flex;
            width: 100%;
          }
        }
      }
    }

    @media (max-width: 768px) {
      .container {
        .content {
          padding: 0 1em 1em;
        }
      }
    }

    @media (max-width: 425px) {
      .container {
        .content {
          padding: 0 0.5em 0.5em;
        }
      }
    }

    @media (max-width: 375px) {
      .container {
        .content {
          padding: 0 0.2em 0.2em;

          .title {
            sfc-title {
              ::ng-deep > .container {
                .title {
                  justify-content: center;

                  .label {
                    text-align: center;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

@mixin part() {
  @include theme-value(background, #fcfcfc, #232527);

  transition: background $transition-theme-backround-duration $transition-theme-backround-timing-function;
  border-radius: 1em;
  padding: 1em 2em;
  margin: 0.5em;

  @media (max-width: 1024px) {
    padding: 1em;
  }

  @media (max-width: 425px) {
    padding: 0.5em;
  }
}

@mixin host($cursor: default) {
  cursor: $cursor;
  user-select: none;
}

@mixin action-menu($color: $color-0) {
  sfc-dropdown-menu {
    ::ng-deep ul > li {
      > .container {
        @include square-size(1.8em);

        sfc-dots {
          .container {
            > .dots-container {
              > .dot {
                @include theme-value(background, $color !important);
              }
            }
          }
        }
      }

      > .dropdown-container {
        sfc-dropdown-menu-item {
          sfc-delimeter {
            @include delimeter.sfc-delimeter-as-default;
          }
        }
      }
    }
  }
}

@mixin circle($size: 1em, $color: $color-green-1) {
  width: $size;
  line-height: $size;
  border-radius: 50%;
  text-align: center;
  color: $color;
  font-weight: bold;
  border: 2px solid $color;
}
